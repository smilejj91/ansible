<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>periodically experimental distribution publish switch (MON ~ FRI, every 30 minutes)&#xd;
&#xd;
- target&#xd;
  - nabi-experimental</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H/30 * * * 1,2,3,4,5</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

SNAPSHOT_NAME=&quot;$(date --iso-8601=seconds)-${TARGET_VERSION}&quot;

DISTRIBUTION=&quot;nabi-experimental&quot;
PREFIX=&quot;tmax&quot;
GPGID=&quot;TmaxOS_Infra&quot;
GPGPASSWD=&quot;TmaxYangPark2019@#&quot;
CONFIG=&quot;/etc/aptly.conf&quot;


function general_publish_switch() {
  # ${DISTRIBUTION} snapshot create
  aptly snapshot create -config=${CONFIG} ${SNAPSHOT_NAME}_${DISTRIBUTION}_main from repo ${DISTRIBUTION}_main
  aptly snapshot create -config=${CONFIG} ${SNAPSHOT_NAME}_${DISTRIBUTION}_contrib from repo ${DISTRIBUTION}_contrib
  aptly snapshot create -config=${CONFIG} ${SNAPSHOT_NAME}_${DISTRIBUTION}_non-free from repo ${DISTRIBUTION}_non-free

  aptly publish switch -config=${CONFIG} -skip-cleanup -skip-contents -gpg-key=&quot;${GPGID}&quot; -batch -passphrase=&quot;${GPGPASSWD}&quot; -component=main,contrib,non-free ${DISTRIBUTION} ${PREFIX} ${SNAPSHOT_NAME}_${DISTRIBUTION}_main ${SNAPSHOT_NAME}_${DISTRIBUTION}_contrib ${SNAPSHOT_NAME}_${DISTRIBUTION}_non-free
}


general_publish_switch
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>